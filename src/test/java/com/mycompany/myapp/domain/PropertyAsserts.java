package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PropertyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyAllPropertiesEquals(Property expected, Property actual) {
        assertPropertyAutoGeneratedPropertiesEquals(expected, actual);
        assertPropertyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyAllUpdatablePropertiesEquals(Property expected, Property actual) {
        assertPropertyUpdatableFieldsEquals(expected, actual);
        assertPropertyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyAutoGeneratedPropertiesEquals(Property expected, Property actual) {
        assertThat(expected)
            .as("Verify Property auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyUpdatableFieldsEquals(Property expected, Property actual) {
        assertThat(expected)
            .as("Verify Property relevant properties")
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getAvailabilityStatus()).as("check availabilityStatus").isEqualTo(actual.getAvailabilityStatus()))
            .satisfies(e -> assertThat(e.getPropertySize()).as("check propertySize").isEqualTo(actual.getPropertySize()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPropertyUpdatableRelationshipsEquals(Property expected, Property actual) {
        assertThat(expected)
            .as("Verify Property relationships")
            .satisfies(e -> assertThat(e.getOwner()).as("check owner").isEqualTo(actual.getOwner()));
    }
}
