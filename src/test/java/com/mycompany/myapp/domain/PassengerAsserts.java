package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PassengerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPassengerAllPropertiesEquals(Passenger expected, Passenger actual) {
        assertPassengerAutoGeneratedPropertiesEquals(expected, actual);
        assertPassengerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPassengerAllUpdatablePropertiesEquals(Passenger expected, Passenger actual) {
        assertPassengerUpdatableFieldsEquals(expected, actual);
        assertPassengerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPassengerAutoGeneratedPropertiesEquals(Passenger expected, Passenger actual) {
        assertThat(expected)
            .as("Verify Passenger auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPassengerUpdatableFieldsEquals(Passenger expected, Passenger actual) {
        assertThat(expected)
            .as("Verify Passenger relevant properties")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getJoinDate()).as("check joinDate").isEqualTo(actual.getJoinDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPassengerUpdatableRelationshipsEquals(Passenger expected, Passenger actual) {
        assertThat(expected)
            .as("Verify Passenger relationships")
            .satisfies(e -> assertThat(e.getUtilisateur()).as("check utilisateur").isEqualTo(actual.getUtilisateur()))
            .satisfies(e -> assertThat(e.getCarpools()).as("check carpools").isEqualTo(actual.getCarpools()));
    }
}
